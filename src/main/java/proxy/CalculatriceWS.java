
package proxy;

import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.Action;
import jakarta.xml.ws.RequestWrapper;
import jakarta.xml.ws.ResponseWrapper;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.0
 * Generated source version: 3.0
 * 
 */
@WebService(name = "CalculatriceWS", targetNamespace = "http://service/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface CalculatriceWS {


    /**
     * 
     * @param a
     * @param b
     * @return
     *     returns double
     */
    @WebMethod(operationName = "Multiplication")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Multiplication", targetNamespace = "http://service/", className = "proxy.Multiplication")
    @ResponseWrapper(localName = "MultiplicationResponse", targetNamespace = "http://service/", className = "proxy.MultiplicationResponse")
    @Action(input = "http://service/CalculatriceWS/MultiplicationRequest", output = "http://service/CalculatriceWS/MultiplicationResponse")
    public double multiplication(
        @WebParam(name = "a", targetNamespace = "")
        double a,
        @WebParam(name = "b", targetNamespace = "")
        double b);

    /**
     * 
     * @param a
     * @param b
     * @return
     *     returns double
     */
    @WebMethod(operationName = "Soustraction")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Soustraction", targetNamespace = "http://service/", className = "proxy.Soustraction")
    @ResponseWrapper(localName = "SoustractionResponse", targetNamespace = "http://service/", className = "proxy.SoustractionResponse")
    @Action(input = "http://service/CalculatriceWS/SoustractionRequest", output = "http://service/CalculatriceWS/SoustractionResponse")
    public double soustraction(
        @WebParam(name = "a", targetNamespace = "")
        double a,
        @WebParam(name = "b", targetNamespace = "")
        double b);

    /**
     * 
     * @param a
     * @param b
     * @return
     *     returns java.lang.Double
     */
    @WebMethod(operationName = "Division")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Division", targetNamespace = "http://service/", className = "proxy.Division")
    @ResponseWrapper(localName = "DivisionResponse", targetNamespace = "http://service/", className = "proxy.DivisionResponse")
    @Action(input = "http://service/CalculatriceWS/DivisionRequest", output = "http://service/CalculatriceWS/DivisionResponse")
    public Double division(
        @WebParam(name = "a", targetNamespace = "")
        double a,
        @WebParam(name = "b", targetNamespace = "")
        double b);

    /**
     * 
     * @param a
     * @param b
     * @return
     *     returns double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "somme", targetNamespace = "http://service/", className = "proxy.Somme")
    @ResponseWrapper(localName = "sommeResponse", targetNamespace = "http://service/", className = "proxy.SommeResponse")
    @Action(input = "http://service/CalculatriceWS/sommeRequest", output = "http://service/CalculatriceWS/sommeResponse")
    public double somme(
        @WebParam(name = "a", targetNamespace = "")
        double a,
        @WebParam(name = "b", targetNamespace = "")
        double b);

}
